diff --git a/arch/arm/armfeature.c b/arch/arm/armfeature.c
index 9ad9eed..ad71df4 100644
--- a/arch/arm/armfeature.c
+++ b/arch/arm/armfeature.c
@@ -1,34 +1,18 @@
 #include "../../zutil.h"
 
-#if defined(__linux__)
-#  include <sys/auxv.h>
-#  include <asm/hwcap.h>
-#elif defined(_WIN32)
-#  include <winapifamily.h>
-#endif
+// NOTE: We can't use getauxval because it was introduced in glibc 2.16, which most of our targets don't support.
+//       On the other hand, we know our targets, and we know that our TC is sane, so switch to compile-time checks.
 
 static int arm_has_crc32() {
-#if defined(__linux__) && defined(HWCAP2_CRC32)
-    return (getauxval(AT_HWCAP2) & HWCAP2_CRC32) != 0 ? 1 : 0;
-#elif defined(ARM_NOCHECK_ACLE)
-    return 1;
-#else
+    // This is an armv8 feature, we're targeting armv6 & armv7 only.
     return 0;
-#endif
 }
 
 /* AArch64 has neon. */
 #if !defined(__aarch64__) && !defined(_M_ARM64)
-static inline int arm_has_neon() {
-#if defined(__linux__) && defined(HWCAP_NEON)
-    return (getauxval(AT_HWCAP) & HWCAP_NEON) != 0 ? 1 : 0;
-#elif defined(_M_ARM) && defined(WINAPI_FAMILY_PARTITION)
-#  if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_PHONE_APP)
-    return 1; /* Always supported */
-#  endif
-#endif
-
-#if defined(ARM_NOCHECK_NEON)
+static inline int arm_has_neon()
+{
+#ifdef __ARM_NEON
     return 1;
 #else
     return 0;
